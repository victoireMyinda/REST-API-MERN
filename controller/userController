const asyncHandler = require("express-async-handler")
const clientModel = require("../model/models")


//Creer un client
const createClient = async(request, response) => {

    // validate request
    if (!request.body) {
        res.status(400).send({ message: "Content can not be emtpy!" });
        return;
    }

    //new client
    const createClient = new clientModel({
        nom: request.body.nom,
        prenom: request.body.prenom,
        adresse: request.body.adresse,
        modele: request.body.modele,
        contact: request.body.contact,
        mesure: {
            londDevant: request.londDevant,
            epaul: request.body.epaul,
            tourEncolure: request.body.tourEncolure,
            tourPoitrine: request.body.tourPoitrine,
            tourTaille: request.body.tourEncolure,
            tourBassin: request.body.tourBassin,
            carrureDos: request.body.carrureDos,
            carrureDevant: request.body.carrureDevant,
            longEpaule: request.body.longEpaule,
            longBras: request.body.longBras
        }
    })

    // save client in the database
    createClient
        .save(createClient)
        .then(data => {
            response.send(data)
            response.status(200)
        })
        .catch(err => {
            response.status(500).send({
                message: err.message || "Some error occurred while creating a create operation"
            });
        });
}


//recuperation des clients tous/un
const findClient = async(request, response) => {

    if (request.query.id) {
        const id = request.query.id;

        createClient.findById(id)
            .then(data => {
                if (!data) {
                    response.status(404).send({ message: "Not found user with id " + id })
                } else {
                    response.send(data)
                    response.status(200)
                }
            })
            .catch(err => {
                response.status(500).send({ message: "Erro retrieving user with id " + id })
            })

    } else {
        createClient.find()
            .then(client => {
                response.send(client)
                response.status(200)
            })
            .catch(err => {
                response.status(500).send({ message: err.message || "Error Occurred while retriving user information" })
            })
    }
}








const updateClient = asyncHandler(async(request, response) => {
    response.status(200).json({ message: "UPDATE success" })
})

const deleteClient = asyncHandler(async(request, response) => {
    response.status(200).json({ message: "DELETE success" })
})


module.exports = { createClient, updateClient, findClient, deleteClient }